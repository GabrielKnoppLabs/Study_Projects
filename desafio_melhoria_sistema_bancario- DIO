def menu():
    return """
    ========== MENU ==========
    [1] Depositar
    [2] Sacar
    [3] Extrato Geral
    [4] Criar Usuário
    [5] Criar Conta Corrente
    [6] Listar Contas
    [7] Extrato por CPF
    [8] Sair
    => """


def depositar(conta, valor):
    if valor > 0:
        conta["saldo"] += valor
        conta["extrato"].append(f"Depósito: R$ {valor:.2f}")
        print("Depósito realizado com sucesso!")
    else:
        print("Valor inválido para depósito.")


def sacar(conta, valor, limite, limite_saques):
    if valor <= 0:
        print("Valor inválido.")
    elif valor > conta["saldo"]:
        print("Saldo insuficiente.")
    elif valor > limite:
        print("Limite de saque excedido.")
    elif conta["saques"] >= limite_saques:
        print("Número de saques diários excedido.")
    else:
        conta["saldo"] -= valor
        conta["extrato"].append(f"Saque: R$ {valor:.2f}")
        conta["saques"] += 1
        print("Saque realizado com sucesso!")


def exibir_extrato(conta):
    print(f"\n========== EXTRATO - Conta {conta['numero_conta']} ==========")
    if conta["extrato"]:
        for op in conta["extrato"]:
            print(op)
    else:
        print("Não foram realizadas movimentações.")
    print(f"\nSaldo atual: R$ {conta['saldo']:.2f}")
    print("==================================")


def criar_usuario(usuarios):
    cpf = input("Digite o CPF (somente números): ")
    if filtrar_usuario(cpf, usuarios):
        print("Usuário já cadastrado.")
        return

    nome = input("Nome completo: ")
    nascimento = input("Data de nascimento (dd-mm-aaaa): ")
    endereco = input("Endereço (logradouro, nº - bairro - cidade/UF): ")

    usuarios.append({
        "nome": nome,
        "data_nascimento": nascimento,
        "cpf": cpf,
        "endereco": endereco
    })
    print("Usuário criado com sucesso!")


def filtrar_usuario(cpf, usuarios):
    return next((u for u in usuarios if u["cpf"] == cpf), None)


def criar_conta(agencia, numero_conta, usuarios, contas):
    cpf = input("Informe o CPF do usuário: ")
    usuario = filtrar_usuario(cpf, usuarios)

    if not usuario:
        print("Usuário não encontrado. Crie o usuário primeiro.")
        return

    conta = {
        "agencia": agencia,
        "numero_conta": numero_conta,
        "usuario": usuario,
        "saldo": 0,
        "extrato": [],
        "saques": 0
    }
    contas.append(conta)
    print("Conta criada com sucesso!")


def listar_contas(contas):
    if not contas:
        print("Nenhuma conta cadastrada.")
        return
    for conta in contas:
        print(f"""\
Agência: {conta['agencia']}
Conta: {conta['numero_conta']}
Titular: {conta['usuario']['nome']} (CPF: {conta['usuario']['cpf']})
-------------------------""")


def exibir_extrato_por_cpf(cpf, contas):
    contas_encontradas = [c for c in contas if c["usuario"]["cpf"] == cpf]
    if not contas_encontradas:
        print("Nenhuma conta encontrada para este CPF.")
        return
    for conta in contas_encontradas:
        exibir_extrato(conta)


def buscar_conta_por_cpf(cpf, contas):
    return next((c for c in contas if c["usuario"]["cpf"] == cpf), None)


# Execução principal
def main():
    AGENCIA = "0001"
    usuarios = []
    contas = []
    numero_conta = 1
    LIMITE_SAQUES = 3
    LIMITE_VALOR = 500

    while True:
        opcao = input(menu())

        if opcao == "1":
            cpf = input("CPF do titular: ")
            conta = buscar_conta_por_cpf(cpf, contas)
            if conta:
                valor = float(input("Valor do depósito: "))
                depositar(conta, valor)
            else:
                print("Conta não encontrada.")

        elif opcao == "2":
            cpf = input("CPF do titular: ")
            conta = buscar_conta_por_cpf(cpf, contas)
            if conta:
                valor = float(input("Valor do saque: "))
                sacar(conta, valor, LIMITE_VALOR, LIMITE_SAQUES)
            else:
                print("Conta não encontrada.")

        elif opcao == "3":
            for conta in contas:
                exibir_extrato(conta)

        elif opcao == "4":
            criar_usuario(usuarios)

        elif opcao == "5":
            criar_conta(AGENCIA, numero_conta, usuarios, contas)
            numero_conta += 1

        elif opcao == "6":
            listar_contas(contas)

        elif opcao == "7":
            cpf = input("Informe o CPF para exibir o extrato: ")
            exibir_extrato_por_cpf(cpf, contas)

        elif opcao == "8":
            print("Saindo do sistema. Até mais!")
            break

        else:
            print("Opção inválida.")


if __name__ == "__main__":
    main()
